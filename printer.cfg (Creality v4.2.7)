[include mainsail.cfg]

# As per YouTube user "Joe Prints" use by-path vs by-id
# Added by PG
#
# MCU is the Microcontroller Unit of the Ender 3 Pro which is the Ender 3 Pro's v4.2.7 mainboard. It's connected via USB to the Orange Pi. The /dev location is on the Orange Pi.
#
[mcu]
serial: /dev/serial/by-path/platform-5200400.usb-usb-0:1:1.0-port0
restart_method: command



# Added by PG - Shows temp of Orange Pi in Mainsail interface.
#
[temperature_sensor orange_pi]
sensor_type: temperature_host



# Added automatically iirc. It's where the uploaded GCodes are saved after uploading from the Mainsail interface.
#
[virtual_sdcard]
path: /home/orangepi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT



# Added by PG - https://www.youtube.com/watch?v=5vmjBXvY6BA
# Enables BL-Touch/CR-Touch
#
[bltouch]
sensor_pin: ^PB1                       # PG - Added "^" since most BLTouch devices require a pull up on the sensor pin and it wouldn't work otherwise.
control_pin: PB0
x_offset: -45.00                       # PG - New Value (post-it note method) - Old values from Pat's Custom Marlin FW = -45.50 (dial caliper)
y_offset: -7.00                        # PG - New Value (post-it note method) - Old values from Pat's Custom Marlin FW = -5.00
samples: 2                             # PG - Probes twice and takes average.
speed: 2
# Due to "Probe samples exceed samples_tolerance" in logs, added the following two lines so if it fails it'll try again vs manually having to restart. Probe seems to occasionally get wildly differing values.
samples_tolerance: .1
samples_tolerance_retries: 3
#z_offset: 0.0                         # PG - This is commented out after it's set automatically. See EOF (End of File).



# Added by PG - https://www.youtube.com/watch?v=5vmjBXvY6BA
# After the X and Y endstops are triggered this is where the BLTouch will autohome to.
#
[safe_z_home]
home_xy_position: 125,125              # Change coordinates to center of bed
speed: 50                              # How fast are we moving to the home position?
z_hop: 10                              # Move up 10mm
z_hop_speed: 5                         # How fast are we moving the Z axis up?



# Added by PG as per Leo
# Screws Tilt Adjust - Performs automatic calculations on how to manually adjust the bed based off the front left adjustment screw.
#
# https://www.youtube.com/watch?v=APAbl5PGEh0&t=345s
# https://www.klipper3d.org/Manual_Level.html
#
#   4 <------ 3
#   |    R    ↑
#   | L     R |
#   ↓    F    |
#   1 ------> 2
#
[screws_tilt_adjust]
screw1: 76.50, 38                      # X and Y location of nozzle directly over left front screw
screw1_name: front left screw
screw2: 247.50, 38                     # X and Y location of nozzle directly over front right screw
screw2_name: front right screw
screw3: 247.50, 208                    # X and Y location of nozzle directly over rear right screw
screw3_name: rear right screw
screw4: 76.50, 208                     # X and Y location of nozzle directly over rear left screw
screw4_name: rear left screw
horizontal_move_z: 10                  # Lift Z axis 10mm between moves.
speed: 50                              # Travel speed between point in millimeters per minute.
screw_thread: CW-M4                    # Adjustment screw under bed turns clockwise to decrease gap between nozzle and bed amd is an M4 screw.



# ADXL345 Input Shaper Section:
#
# Added by PG
#  Make sure (sudo orangepi-config) has "param_spidev_spi_bus=1" in the "u-boot env" section and that SPI is not enabled in the Hardware section. This is the SPI1 bus as seen on orangepi gpio diagrams.
#  (make flash) needs to be run to build & configure the SPI driver on the Orange Pi (https://www.klipper3d.org/Installation.html).
#
# *** Run automatic or manual calibration but not both ***
#
# Automatic calibration of each axis (https://www.klipper3d.org/Measuring_Resonances.html#input-shaper-auto-calibration):
#
#    1. Run "ACCELEROMETER_QUERY" to get current ADXL345 data and verify ADXL345 chip is connected and working correctly.
#    2. Run "SHAPER_CALIBRATE AXIS=X" to run test
#    3. Run "SAVE_CONFIG" to save data to printer.cfg
#    4. Run "SHAPER_CALIBRATE AXIS=Y" to run test
#    5. Run "SAVE_CONFIG" to save data to printer.cfg
#
# Manual calibration of each axis (https://www.klipper3d.org/Measuring_Resonances.html#testing-custom-axes):
#
#    1. Run "ACCELEROMETER_QUERY" to get current ADXL345 data and verify ADXL345 chip is connected and working correctly.
#    2. Run "TEST_RESONANCES AXIS=X' and "TEST_RESONANCES AXIS=Y" to run test and add CSV data to "/tmp" on the Pi. Once data is aquired for both axes run the following command to get recommended settings and PNGs of graphs:
#    3. ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png
#    4. ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png
#    5. Recommended input shaper data will be displayed. Add this to the INPUT_SHAPER section of printer.cfg
[mcu rpi]
serial: /tmp/klipper_host_mcu          # This is the driver file.

[adxl345]
cs_pin: rpi:None
spi_bus: spidev1.1                     # To get this value run, (ls /dev/spi*) to see available SPI devices.

[resonance_tester]
accel_chip: adxl345                    # Specifies the type of accelerometer chip being used.
probe_points:                          # As per Aubey in Discord, this is where the tool head should park when running the test.
    100, 100, 20  # Set by PG          # This should be the middle of the bed. Changed from default of (x,y,z) 100, 100, 20 to 



# Bed Mesh Probe Points Section:
#
# Added by PG - https://youtu.be/5vmjBXvY6BA?si=Le7Bqf7OGQHqSTqf&t=678
#
[bed_mesh]
speed: 200                             # Speed at which to move between probing points, tested 600, too fast.
horizontal_move_z: 5                   # How high does probe move after last probe before moving to next point?
mesh_min: 12, 23                       # Bounding box. Set probe pin 10mm in from LL and LF edge. Note nozzle loc in Mainsail. Take nozzle loc (x,y) and add Z offset X & Y values. (e.g., nozzle (57,30) + Z offset (-45,-7)). mesh_min: 12, 23
mesh_max: 206, 223                     # Bounding box. To solve, find position_max of steppers X & Y and add Z offset values. (e.g., position_max for X=251 + -45=206) (position_max for Y=230 + -7=223). mesh_max: 206, 223
probe_count: 3,3                       # 5x5=25 probe points (x,y)
mesh_pps: 5,5                          # Mesh probe points inbetween actual probes which Klipper will automatically calculate.
fade_start: 1                          # Value in mm when to start decreasing effect of probe mesh
fade_end: 10                           # Height in mm when probe mesh terminates completely
#fade_target: 0



# Pat's Ender 3 Custom Start G-code (MicroSwiss Direct Drive)
# chat.openai.com - Start Code 
#
[gcode_macro START_PRINT]
variable_bed_temp: 60                  # Sets default value to 60°C. Can be changed with gcode.
variable_extruder_temp: 220            # Sets default value to 220°C. Can be changed with gcode.

gcode:
  G28                                  # Homes all axes
  
  ; Heat bed to temperature specified in the G-code file
  M140 S{bed_temp}                     # Begin heating up bed to temp specified in gcode, do not wait for bed to hit this temp
  M190 S{bed_temp}                     # Wait for bed to reach temperature specified in G-code file

  ; Call SCREWS_TILT_CALCULATION with a maximum deviation of 0.06. If outside this value the print will fail.
  SCREWS_TILT_CALCULATE MAX_DEVIATION=0.06

  BED_MESH_CLEAR                       # Clears existing bed mesh.
  BED_MESH_CALIBRATE                   # Runs a new 5x5 (3,3) interpolated bed mesh. Controlled by [bed_mesh] section.
# BED_MESH_OUTPUT                      # Outputs bed mesh data to console (was never enabled).
  BED_MESH_PROFILE SAVE=current        # Saves new mesh named "current".
  BED_MESH_PROFILE LOAD=current        # Immediately loads new mesh named "current".

  ; Heat up the nozzle to the print temperature specified in the G-code file
  M104 S{extruder_temp} T0             # Begin heating up extruder to temp specified in gcode, do not wait for extruder to hit this temp
  M109 S{extruder_temp}                # Wait for nozzle to reach the printing temperature specified in G-code file before continuing.

  G90                                  # Absolute positioning for movements
  
  G1 Z5 F3000                          # Move the nozzle near the bed
  G1 Z0.15 F300                        # Move the nozzle height very close to the bed
  G92 E0                               # Reset extruder position to 0,0 without moving axis
  G1 Z2.0 F3000                        # Move Z Axis up 2mm at 3000mm/min
  G1 X2.1 Y20 Z0.28 F5000.0            # Move to start position (move the print head to the coordinates (2.1, 20, 0.28) at a speed of 5000mm/min)
  G1 X2.1 Y200.0 Z0.28 F1500.0 E15     # Draw the first line
  G1 X2.4 Y200.0 Z0.28 F5000.0         # Move to side a little
  G1 X2.4 Y20 Z0.28 F1500.0 E30        # Draw the second line
  G92 E0                               # Reset Extruder
  G1 Z2.0 F3000                        # Move Z Axis up 2mm at 3000mm/min

  M82                                  # Absolute mode for extrusion



# Pat's Ender 3 Custom End G-code (MicroSwiss Direct Drive)
#
[gcode_macro END_PRINT]
gcode:
    G91                                # Relative positioning

    G1 E-10 F2700                      # Retract 10mm at 2700 mm/min (PG - Changed retract amount from 2mm to 10mm on 03.20.24)
    G1 E-2 Z0.2 F2400                  # Retract filament by 2mm and raise Z to 0.2mm at 2400 mm/min
    G1 X5 Y5 F3000                     # Wipe out
    G1 Z10                             # Move the Z-axis up 10mm

    G90                                # Absolute positioning

    G1 X0 Y230                         # Present print (PG - Changed "Y{machine_depth}" to "Y230" as this is the "position_max" for the Y axis as defined below on 06.01.24)

    M106 S0                            # Turn-off fan
    M104 S0                            # Turn-off hotend
    M140 S0                            # Turn-off bed

    M84 X Y E                          # Disable all steppers but Z



# This file contains pin mappings for the Creality "v4.2.7" board. To
# use this config, during "make menuconfig" select the STM32F103 with
# a "28KiB bootloader" and serial (on USART1 PA10/PA9) communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PB9
dir_pin: PC2
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: -4.00                # 3. PG - Inverse of value gathered during testing (testing x=4.00)
position_max: 251.00                   # 1. PG - Was 235. Final value is 251.00
position_min: -4.00                    # 2. PG - Adding as per Leo to find max probe area. If position_endstop is negative number, match here, else remove this line.
homing_speed: 50

[stepper_y]
step_pin: PB7
dir_pin: PB8
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: -15                  # 3. PG - Inverse of value gathered during testing (testing y=15.00)
position_max: 230                      # 1. PG - Was 235. Final value is 230.00
position_min: -15                      # 2. PG - Adding as per Leo to find max probe area. If position_endstop is negative number, match here, else remove this line.
homing_speed: 50

[stepper_z]
step_pin: PB5
dir_pin: !PB6
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
#endstop_pin: ^PA7                     # PG - Disabling default endstop pin in lieu of BLTouch
endstop_pin: probe:z_virtual_endstop   # Added by PG to enable BLTouch
#position_endstop: 0.0                 # PG - Disabling for BLTouch
position_max: 250
position_min: -6.00                    # Added by PG - https://www.youtube.com/watch?v=5vmjBXvY6BA (9:25)

# https://3dprinting.stackexchange.com/questions/20797/why-are-the-options-for-pid-control-commented-out-in-klipper-config-file
# Klipper automatically disabled the below PID values and automatically put the correct calibrated ones at the end of this file in a special section.
[extruder]
pressure_advance: 0.0370               # 06.16.24 - PG - Set using Ellis's PA Tool (https://ellis3dp.com/Print-Tuning-Guide/articles/pressure_linear_advance/pattern_method.html)
max_extrude_only_distance: 101.0
step_pin: PB3
dir_pin: PB4
enable_pin: !PC3
microsteps: 16
#rotation_distance: 33.500             # OLD-DATA - PG - Original value
#rotation_distance: 23.316             # OLD DATA - PG - 3x - Final value = 20mm left over. 50 extruded, OK. Calibrated e-steps by https://www.youtube.com/watch?v=5Suy_MGGFL4
rotation_distance: 23.0479             # 06.05.24 - PG - https://ellis3dp.com/Print-Tuning-Guide/articles/extruder_calibration.html
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 250

# https://3dprinting.stackexchange.com/questions/20797/why-are-the-options-for-pid-control-commented-out-in-klipper-config-file
# Klipper automatically disabled the below PID values and automatically put the correct calibrated ones at the end of this file in a special section.
[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

# Added from: https://github.com/Klipper3d/klipper/blob/master/config/printer-creality-ender3pro-2020.cfg#L108#L114
# Added by PG - Enables LCD on Ender 3 Pro
[display]
lcd_type: st7920
cs_pin: PB12
sclk_pin: PB13
sid_pin: PB15
encoder_pins: ^PB14, ^PB10
click_pin: ^!PB2

[board_pins]
aliases:
  EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
  EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
  PROBE_IN=PB0,PROBE_OUT=PB1,FIL_RUNOUT=PC6

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 26.464
#*# pid_ki = 1.713
#*# pid_kd = 102.215
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.379
#*# pid_ki = 1.260
#*# pid_kd = 954.828
#*#
#*# [bltouch]
#*# z_offset = 0.566
#*#
#*# [input_shaper]
#*# shaper_type_y = ei
#*# shaper_freq_y = 45.0
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 46.8
