How to setup and add the ADXL345 to Klipper:
============================================

https://www.klipper3d.org/Measuring_Resonances.html

Requires 2 ADXL345 chips. (x, y)



Enable SPI interface in Settings:
=================================

sudo orangepi-config
  System --> Hardware --> Make sure nothing is selected

  System --> Bootenv

    verbosity=1
    bootlogo=false
    console=both
    disp_mode=1920x1080p60
    overlay_prefix=sun50i-h616
    rootdev=UUID=635d9db0-d9c8-453e-baca-8b0e028d5dcf
    rootfstype=ext4
    param_spidev_spi_bus=1
    usbstoragequirks=0x2537:0x1066:u,0x2537:0x1068:u

  Save and exit



Install required software on orange pi first:
=============================================

sudo apt update
sudo apt install python3-numpy python3-matplotlib libatlas-base-dev libopenblas-dev

~/klippy-env/bin/pip install -v numpy



Build host process file for ADXL345 on orange pi:
=================================================

cd ~/klipper
make menuconfig

(*) Enable extra low--level configuration options
    Micro-controller Architecture (Linux Process)
( ) GPIO pins to set at micro-controller startup

Press "Q" then "Y" to save. This will start building the required file.

make clean                                                                  # Clears out dir - /home/orangepi/klipper/out/
make                                                                        # Build ADXL345 linux process file



Add the following to the printer.cfg file:
==========================================
# https://www.klipper3d.org/Measuring_Resonances.html

# ADXL345 Input Shaper Section:
#
# Added by PG
#  Make sure (sudo orangepi-config) has "param_spidev_spi_bus=1" in the "u-boot env" section and that SPI is not enabled in the hardware section!! This is the SPI1 bus as seen on orangepi gpio diagrams.
#
# *** Run automatic or manual calibration but not both! ***
# 
# Find the MCU device by path or id (path is preferred):
# 
#    ls /dev/serial/by-path/*
#    ls /dev/serial/by-id/*
#
# Automatic calibration of each axis (https://www.klipper3d.org/Measuring_Resonances.html#input-shaper-auto-calibration):
#
#    1. Run "ACCELEROMETER_QUERY" to get current ADXL345 data and verify ADXL345 chip is connected and working correctly.
#    2. Run "SHAPER_CALIBRATE AXIS=X" to run test
#    3. Run "SAVE_CONFIG" to save data to printer.cfg
#    4. Run "SHAPER_CALIBRATE AXIS=Y" to run test
#    5. Run "SAVE_CONFIG" to save data to printer.cfg
#
# Manual calibration of each axis (https://www.klipper3d.org/Measuring_Resonances.html#testing-custom-axes):
#
#    1. Run "ACCELEROMETER_QUERY" to get current ADXL345 data and verify ADXL345 chip is connected and working correctly.
#    2. Run "TEST_RESONANCES AXIS=X' and "TEST_RESONANCES AXIS=Y" to run test and add CSV data to "/tmp" on the Pi. Once data is aquired for both axes run the following command to get recommended settings and PNGs of graphs:
#    3. ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png
#    4. ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png
#    5. Recommended input shaper data will be displayed. Add this to the INPUT_SHAPER section of printer.cfg

[mcu rpi]
serial: /tmp/klipper_host_mcu          # This is the driver file.

[adxl345]
cs_pin: rpi:None
spi_bus: spidev1.1                     # To get this value run, (ls /dev/spi*) to see available SPI devices.

[resonance_tester]
accel_chip: adxl345                    # Specifies the type of accelerometer chip being used.
probe_points:                          # As per Aubey in Discord, this is where the tool head should park when running the test.
    100, 100, 20  # Set by PG          # This should be the middle of the bed (x, y, z)

